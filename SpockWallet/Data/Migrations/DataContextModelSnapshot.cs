// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpockWallet.Data;

namespace SpockWallet.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("SpockWallet.Data.Config", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Key");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("SpockWallet.Data.Contract", b =>
                {
                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BlockNumber");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreationTransaction");

                    b.Property<int>("Decimals");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Owner");

                    b.Property<string>("Symbol");

                    b.Property<string>("TokenName");

                    b.Property<string>("TotalSupply");

                    b.HasKey("Address");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("SpockWallet.Data.TokenTransfer", b =>
                {
                    b.Property<string>("Hash")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BlockNumber");

                    b.Property<string>("ContractAddress");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("From");

                    b.Property<string>("Method");

                    b.Property<string>("Symbol");

                    b.Property<string>("To");

                    b.Property<decimal>("Value");

                    b.HasKey("Hash");

                    b.ToTable("TokenTransfers");
                });

            modelBuilder.Entity("SpockWallet.Data.Transaction", b =>
                {
                    b.Property<string>("Hash")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlockHash");

                    b.Property<long>("BlockNumber");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("From");

                    b.Property<string>("Gas");

                    b.Property<string>("GasPrice");

                    b.Property<string>("Input");

                    b.Property<string>("Status");

                    b.Property<string>("To");

                    b.Property<string>("Value");

                    b.HasKey("Hash");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SpockWallet.Data.Wallet", b =>
                {
                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Balance");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("PlotId");

                    b.Property<string>("PrivateKey");

                    b.Property<long>("ScanLocation");

                    b.Property<string>("StakingRequired");

                    b.HasKey("Address");

                    b.ToTable("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
